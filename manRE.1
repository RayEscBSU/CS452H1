# man deq
                                                                                            
Teting - test are built in to main.c

       Test for put and get. Checks functionality of deq_head_put/ deq_tail_put and deq_head_get/ deq_tail_get functionality
       run_put_get
       Deq - q
       ht - 0 = deq_head_put, 1 = deq_tail_put
       r - 0 = deq_head_get, 1 = deq_tail_gset

       Test for REM. Checks functionality of deq_tail_rem and deq_head_rem
       run_rem
       Deq - q
       ht - 0 = deq_head_put, 1 = deq_tail_put
       r - 0 = deq_head_rem, 1 = deq_tail_rem

       Test for ith, Checks functionality of deq_head_ith and deq_tail_ith
       run_ith
       Deq - q
       ht - 0 = deq_head_put, 1 = deq_tail_put
       r - 0 = deq_head_ith, 1 = deq_tail_ith
       index - specified index to removes

 How to perform test - user runs test to be performed in main.c. 

Run 
       GNUmakefile must be in the parent directory 
       To run: 
              From directory where main.c is located    - make
                                                        -./deq

       To run valgrind: 
       From directory where main.c is located    - make valgrind
                                                 


       

DESCRIPTION
       Our assingment was to implement a double ended doubly linked list. Doulbe ended means the list can have
       the head or tail at iether end of the list. Double linked means each node has a pointer for its head and
       tail nodes. Valgrind was used to manage memory. Below are the functions implemented: 

              - Put - adds a node to the end of the list
              - ith - returns data at a specified index depnding on direction
              - Get - Returns the data from the last node
              - Rem - removes the node with matching data then removes node

       This is a test script for man page template. Place brief description here.

OBJECT
       --a1|-arg1 <arg1_value>
              Provide arg1_value. Must be integer. Provide more hint for the user related to arg1_value

       --a2|-arg2  <arg2_value>
              Provide arg2_value. Must be integer. Provide more hint for the user related to arg2_value

       --a3|-arg3 value1,value2,value3,..

       Different man page examples formats

       Display in normal format with regular TAB using .RS and TAB value of 1.2i

                   TEAM1 - team1_value1, team1_value2

                   TEAM2 - team2_value1, team2_value2

       Display content in Table Format. Floating in Left

                   ┌──────┬────────────────────────────┐
                   │TEAM  │           Value            │
                   ├──────┼────────────────────────────┤
                   │TEAM1 │ team1_value1, team1_value2 │
                   │TEAM2 │ team2_value1, team2_value2 │
                   │TEAM3 │ team3_value1, team3_value2 │
                   │TEAM4 │ team4_value1, team4_value2 │
                   └──────┴────────────────────────────┘

       Display content in a Tabular format

                   TEAM              Value                  Comment
                   ─────────────────────────────────────────────────────

                   TEAM1   team1_value1, team1_value2   Value for team1
                   TEAM2   team2_value1, team2_value2   Value for team2
                   TEAM3   team3_value1, team3_value2   Value for team3
                   TEAM4   team4_value1, team4_value2   Value for team4

              Multiple values can be added within inverted commas separated by comma for different teams

FILES
       GNUmakefile
       CS452H1
              libdeq.so
              deq.c
              main.c
              deq.h
              error.h
              manRE.1s

EXAMPLES
       deq_head_get
       deq_head_ith
       deq_head_put - deq_head_put(q,"char_test")
       deq_head_rem

       deq_tail_get
       deq_tail_ith
       deq_tail_put - deq_tail_put(q,"char_test")
       deq_tail_rem


CREDITS
       Author:       Raymundo Escobedo 
       Date:         Spring 2023
       Class:        CS 452
                                                                                                             test_script(1)()

